apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  labels:
    nodepool: pool0
  name: ${CLUSTER_NAME}-control-plane
  namespace: ${NAMESPACE}
spec:
  kubeadmConfigSpec:
    preKubeadmCommands:
      - apt -y update
      - apt install -y ca-certificates curl gnupg lsb-release apt-transport-https
      - swapoff -a
      - sed -i '/swap/d' /etc/fstab
      - |
        cat << EOF > /etc/modules-load.d/containerd.conf
        overlay
        br_netfilter
        EOF
      - modprobe overlay
      - modprobe br_netfilter
      - |
        cat << EOF > /etc/sysctl.d/99-kubernetes-cri.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.ipv4.ip_forward                 = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        EOF
      - sysctl --system
      - curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /usr/share/keyrings/docker.asc
      - chmod a+r /usr/share/keyrings/docker.asc
      - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
      - curl -fsSL https://pkgs.k8s.io/core:/stable:/${APT_KEY_K8S}/deb/Release.key -o /usr/share/keyrings/kubernetes-apt-keyring.asc
      - echo "deb [signed-by=/usr/share/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/${APT_KEY_K8S}/deb/ /" > /etc/apt/sources.list.d/kubernetes.list
      - apt -y update
      - apt install -y kubelet=${K8S_VERSION} kubeadm=${K8S_VERSION} kubectl=${K8S_VERSION} containerd.io=${CRI_VERSION}
      - containerd config default > /etc/containerd/config.toml
      - sed -i "s/SystemdCgroup = false/SystemdCgroup = true/g" /etc/containerd/config.toml
      - systemctl daemon-reload
      - systemctl enable containerd.service
      - systemctl restart containerd.service
    postKubeadmCommands:
      - mkdir -p /root/.kube
      - yes | cp -i /etc/kubernetes/admin.conf /root/.kube/config
      - chown $(id -u):$(id -g) /root/.kube/config
    clusterConfiguration:
      certificatesDir: "/etc/kubernetes/pki"
      apiServer:
        certSANs:
        - localhost
        - 127.0.0.1
        - 0.0.0.0
        extraArgs:
          anonymous-auth: "true"
          authorization-mode: RBAC,Node
          default-not-ready-toleration-seconds: "300"
          default-unreachable-toleration-seconds: "300"
          disable-admission-plugins: AlwaysAdmit
          enable-admission-plugins: AlwaysPullImages,NamespaceLifecycle,ServiceAccount,NodeRestriction
        timeoutForControlPlane: 10m0s
      controllerManager:
        extraArgs:
          bind-address: "0.0.0.0"
          cluster-signing-duration: "876000h"
      dns: {}
      etcd:
        local:
          extraArgs:
            listen-metrics-urls: "http://0.0.0.0:2381"
      networking: {}
      scheduler:
        extraArgs:
          bind-address: "0.0.0.0"
    initConfiguration:
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        ignorePreflightErrors:
        - Swap
        - DirAvailable--etc-kubernetes-manifests
        - FileAvailable--etc-kubernetes-kubelet.conf
        kubeletExtraArgs:
          healthz-bind-address: "0.0.0.0"
          node-labels: "kube-ovn/role=master"
    joinConfiguration:
      caCertPath: /etc/kubernetes/pki/ca.crt
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        ignorePreflightErrors:
        - Swap
        - DirAvailable--etc-kubernetes-manifests
        - FileAvailable--etc-kubernetes-kubelet.conf
        kubeletExtraArgs:
          healthz-bind-address: "0.0.0.0"
          node-labels: "kube-ovn/role=master"
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: ByoMachineTemplate
      name: ${CLUSTER_NAME}-control-plane
      namespace: ${NAMESPACE}
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: ${KUBERNETES_VERSION}
