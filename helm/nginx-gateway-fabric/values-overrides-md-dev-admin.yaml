# yaml-language-server: $schema=values.schema.json

nginxGateway:
  # FIXME(lucacome): https://github.com/nginxinc/nginx-gateway-fabric/issues/2490

  kind: deployment
  gatewayClassName: nginx
  podAnnotations: {}
  gatewayClassAnnotations: {}
  gatewayControllerName: gateway.nginx.org/nginx-gateway-controller
  config:
    logging:
      level: info
  configAnnotations: {}
  replicaCount: 1
  leaderElection:
    enable: true
    lockName: ""
  readinessProbe:
    enable: true
    port: 8081
    initialDelaySeconds: 3

  image:
    repository: ghcr.io/nginxinc/nginx-gateway-fabric
    tag: 1.4.0
    pullPolicy: IfNotPresent
  securityContext:
    allowPrivilegeEscalation: false
  productTelemetry:
    enable: true
  lifecycle: {}
  resources: {}
  extraVolumeMounts: []
  gwAPIExperimentalFeatures:
    enable: false
  snippetsFilters:
    enable: false
nginx:
  image:
    repository: ghcr.io/nginxinc/nginx-gateway-fabric/nginx
    tag: 1.4.0
    pullPolicy: IfNotPresent
  plus: false
  usage:
    secretName: "nplus-license"
    endpoint: ""
    resolver: ""
    skipVerify: false
    caSecretName: ""
    clientSSLSecretName: ""
  config: {}
  debug: false
  lifecycle: {}
  extraVolumeMounts: []
terminationGracePeriodSeconds: 30
tolerations: []
nodeSelector: {kubernetes.io/hostname: "kdvmd-mg-k8swork01"}
affinity: {}
topologySpreadConstraints: []

serviceAccount:
  annotations: {}
  name: ""

  imagePullSecret: ""
  imagePullSecrets: []

service:
  create: true
  type: LoadBalancer

  # @schema
  # enum:
  #   - Cluster
  #   - Local
  # @schema
  # -- The externalTrafficPolicy of the service. The value Local preserves the client source IP.
  externalTrafficPolicy: Cluster

  # -- The annotations of the NGINX Gateway Fabric service.
  annotations: {}

  # -- The static IP address for the load balancer. Requires service.type set to LoadBalancer.
  loadBalancerIP: "172.16.1.19"

  # -- The IP ranges (CIDR) that are allowed to access the load balancer. Requires service.type set to LoadBalancer.
  loadBalancerSourceRanges: []

  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
    - port: 443
      targetPort: 443
      protocol: TCP
      name: https

metrics:
  enable: true
  port: 9113

  secure: false

extraVolumes: []
